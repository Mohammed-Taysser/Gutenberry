{"version":3,"sources":["core.js"],"names":["main_function","enable_bootstrap_tooltip","close_button","document","querySelector","menu_links","search_button","search_popup","search_popup_content","onclick","event","stopPropagation","preventDefault","focus","classList","toggle","this","addEventListener","target","contains","active_moved_label_effect","profile_copy_user_id","getElementById","change_user_avatar","copy_to_clipboard","text","temp_textarea","createElement","value","body","appendChild","select","execCommand","removeChild","slice","call","querySelectorAll","map","tooltip_element","bootstrap","Tooltip","get_cropped_avatar","cropped_avatar","getCroppedCanvas","width","height","fillColor","imageSmoothingEnabled","imageSmoothingQuality","create_avatar_cropper_instance","image","Cropper","aspectRatio","dragMode","zoomable","minContainerWidth","minContainerHeight","toggleDragModeOnDblclick","zoomOnWheel","viewMode","generate_new_avatar_url","URL","createObjectURL","input_container","forEach","input","input_has_content","length","add","remove","old_data_copy_title","user_id_btn","user_id_input","dataset","bsOriginalTitle","setTimeout","avatar_cropper_instance","modal","profile_modal_image","onchange","url","files","src","Modal","getOrCreateInstance","show","destroy","output","hide","toDataURL","send_new_avatar_to_server","toBlob","blob","FormData","append","window","onload","console","info","current_year","Date","getFullYear","toString","textContent"],"mappings":"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","file":"core.min.js","sourcesContent":["/* global bootstrap */\n/* Vanilla JS start here ðŸŒŸ */\n\nwindow.onload = function () {\n  'use strict';\n\n  // warn user from console\n  window.console.info('This is a browser feature intended for developers. Do not paste any code here given to you by someone else. It may compromise your account or have other negative side effects. have a good day');\n\n  // remove loader class from body\n  document.body.classList.remove('load');\n\n  // call main function\n  main_function();\n\n  // footer current year\n  const current_year = new Date().getFullYear().toString();\n  document.querySelector('#current_year').textContent = current_year;\n};\n\n// eslint-disable-next-line max-lines-per-function\nfunction main_function() {\n  'use strict';\n\n  enable_bootstrap_tooltip();\n\n  /* toggle menu & search button  */\n\n  const close_button = document.querySelector('#js-close-button'),\n    menu_links = document.querySelector('#js-main-links ul'),\n    search_button = document.querySelector('#search-button'),\n    search_popup = document.querySelector('#search-popup'),\n    search_popup_content = document.querySelector('#search-popup .content');\n\n  search_button.onclick = function (event) {\n    event.stopPropagation();\n    event.preventDefault();\n    document.querySelector('#search-popup input.input-search').focus();\n    search_popup.classList.toggle('open');\n  };\n\n  search_popup_content.onclick = function (event) {\n    event.stopPropagation();\n  };\n\n  menu_links.onclick = function (event) {\n    event.stopPropagation();\n  };\n\n  close_button.onclick = function (event) {\n    event.stopPropagation();\n    this.classList.toggle('transform');\n    menu_links.classList.toggle('open');\n  };\n\n  document.addEventListener('click', (event) => {\n    window_toggle_navbar_menu(event);\n    window_toggle_searchbar(event);\n  });\n\n  function window_toggle_navbar_menu(event) {\n    if (event.target !== menu_links && event.target !== close_button) {\n      if (menu_links.classList.contains('open')) {\n        close_button.classList.toggle('transform');\n        menu_links.classList.toggle('open');\n      }\n    }\n  }\n\n  function window_toggle_searchbar(event) {\n    if (event.target !== search_popup_content && event.target !== search_button) {\n      if (search_popup.classList.contains('open'))\n        search_popup.classList.toggle('open');\n\n    }\n  }\n\n  active_moved_label_effect();\n\n  profile_copy_user_id();\n\n  /* profile change avatar cropper */\n  if (document.getElementById('js-profile-avatar'))\n    change_user_avatar();\n\n}\n\n/**\n * copy text to clipboard\n * @param {String} text text to be copy\n * @returns {Void} no return\n */\nfunction copy_to_clipboard(text) {\n  'use strict';\n  const temp_textarea = document.createElement('textarea');\n  temp_textarea.value = text;\n  document.body.appendChild(temp_textarea);\n  temp_textarea.select();\n  document.execCommand('copy');\n  document.body.removeChild(temp_textarea);\n}\n\n/**\n * use to enable bootstrap tooltip everywhere\n * see docs for further info\n * https://getbootstrap.com/docs/5.1/components/tooltips/#example-enable-tooltips-everywhere\n */\nfunction enable_bootstrap_tooltip() {\n  'use strict';\n  const tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle=\"tooltip\"]'));\n\n  tooltipTriggerList.map(tooltip_element => new bootstrap.Tooltip(tooltip_element));\n}\n\n/**\n * get canvas drawn of the cropped image.\n * @param {*} cropped_avatar\n * @returns {HTMLCanvasElement} canvas drawn of the cropped image.\n */\nfunction get_cropped_avatar(cropped_avatar) {\n  'use strict';\n  return cropped_avatar.getCroppedCanvas({\n    width:                 80,\n    height:                80,\n    fillColor:             '#fff',\n    imageSmoothingEnabled: true,\n    imageSmoothingQuality: 'high',\n  });\n}\n\n/**\n * generate cropper instance\n * @param {Element} image The target image or canvas element for cropping.\n * @returns {Object} cropped image as object\n */\nfunction create_avatar_cropper_instance(image) {\n  'use strict';\n  return new Cropper(image, {\n    aspectRatio:              1,\n    dragMode:                 'none',\n    zoomable:                 false,\n    minContainerWidth:        350,\n    minContainerHeight:       350,\n    toggleDragModeOnDblclick: false,\n    zoomOnWheel:              false,\n    viewMode:                 3,\n  });\n}\n\n/**\n * check needed technology to generate url of uploaded image\n * @param {File} image file object of uploaded image\n * @returns {String} url of uploaded image\n */\nfunction generate_new_avatar_url(image) {\n  'use strict';\n  if (URL)\n    return URL.createObjectURL(image);\n\n  return '';\n}\n\n/**\n * addEventListener for both focus and blur of input element\n */\nfunction active_moved_label_effect() {\n  'use strict';\n  const input_container = document.querySelectorAll('.custom-form-input-container .custom-form-input');\n\n  if (input_container) {\n    input_container.forEach((input) => {\n      input.addEventListener('blur', input_has_content);\n      input.addEventListener('focus', input_has_content);\n    });\n  }\n}\n\n/**\n * use to add or remove animation if input has content\n * @param {Element} event the input target of effect\n * @returns {Void} no return\n */\nfunction input_has_content(event) {\n  'use strict';\n  if (event.target.value.length > 0)\n    event.target.classList.add('has-content');\n  else\n    event.target.classList.remove('has-content');\n}\n\n/**\n * profile page: copy user id from input\n */\nfunction profile_copy_user_id() {\n  'use strict';\n  const user_id_btn = document.getElementById('js-profile-user-btn'),\n    user_id_input = document.getElementById('js-profile-user-input'),\n    DELAY_AFTER_COPY = 1000;\n\n  if (user_id_btn && user_id_input) {\n    const old_data_copy_title = user_id_btn.dataset.bsOriginalTitle;\n    user_id_btn.onclick = function () {\n      copy_to_clipboard(user_id_input.value);\n      user_id_btn.dataset.bsOriginalTitle = 'copied';\n      setTimeout(() => {\n        user_id_btn.dataset.bsOriginalTitle = old_data_copy_title;\n      }, DELAY_AFTER_COPY);\n    };\n  }\n}\n\n// eslint-disable-next-line max-lines-per-function\nfunction change_user_avatar() {\n  'use strict';\n  let avatar_cropper_instance = null;\n\n  const modal = document.getElementById('change-avatar-modal'),\n    profile_modal_image = modal.querySelector('#js-profile-modal-image');\n\n  document.getElementById('js-profile-avatar-file-uploader').onchange = function () {\n    if (this.files[0])\n      send_image_to_cropper(generate_new_avatar_url(this.files[0]));\n  };\n\n  function send_image_to_cropper(url) {\n    profile_modal_image.src = url;\n    avatar_cropper_instance = create_avatar_cropper_instance(profile_modal_image);\n    bootstrap.Modal.getOrCreateInstance(modal).show();\n  }\n\n  modal.addEventListener('show.bs.modal', () => {\n\n    // avatar_cropper_instance = create_avatar_cropper_instance(profile_modal_image);\n  });\n  modal.addEventListener('hide.bs.modal', () => {\n    avatar_cropper_instance.destroy();\n  });\n\n  document.getElementById('js-profile-save-avatar-btn').onclick = function () {\n    const output = get_cropped_avatar(avatar_cropper_instance);\n    bootstrap.Modal.getOrCreateInstance(modal).hide();\n    document.getElementById('js-profile-avatar').src = output.toDataURL();\n    send_new_avatar_to_server(output);\n  };\n}\n\n/**\n * not complete yet\n * @param {*} cropped_avatar\n */\nfunction send_new_avatar_to_server(cropped_avatar) {\n  'use strict';\n\n  // incase: send cropped avatar to server\n  cropped_avatar.toBlob((blob) => {\n    const formData = new FormData();\n    formData.append('avatar', blob, 'avatar.jpg');\n\n    // then make AJAX request here\n  });\n}\n\n/* jQuery start from here ðŸ‘¾ */\n// $(document).ready(function () {});\n"]}